services:
  # Existing Fi MCP Server (Financial Data)
  fi-mcp-server:
    build:
      context: ./fi-mcp-server
      dockerfile: Dockerfile
    ports:
      - "${FI_MCP_PORT:-8080}:8080"
    environment:
      - PORT=8080
      - FI_MCP_EXTERNAL_PORT=${FI_MCP_PORT:-8090}
    networks:
      - juno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Coordinator MCP Server (Orchestration Hub + Claude API)
  coordinator-mcp:
    build:
      context: ./backend/coordinator_mcp
      dockerfile: Dockerfile
    ports:
      - "${COORDINATOR_MCP_PORT:-8081}:8081"
    environment:
      - PORT=8081
      - FI_MCP_URL=${FI_MCP_URL:-http://fi-mcp-server:8080}
      - CONTEXT_AGENT_URL=${CONTEXT_AGENT_URL:-http://context-agent-mcp:8082}
      - SECURITY_AGENT_URL=${SECURITY_AGENT_URL:-http://security-agent-mcp:8083}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - fi-mcp-server
    networks:
      - juno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Context Agent MCP Server (User Context & Fi Integration)
  context-agent-mcp:
    build:
      context: ./backend/context_agent_mcp
      dockerfile: Dockerfile
    ports:
      - "${CONTEXT_AGENT_PORT:-8082}:8082"
    environment:
      - PORT=8082
      - FI_MCP_URL=${FI_MCP_URL:-http://fi-mcp-server:8080}
    depends_on:
      - fi-mcp-server
    networks:
      - juno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Security Agent MCP Server (Risk Assessment)
  security-agent-mcp:
    build:
      context: ./backend/security_agent_mcp
      dockerfile: Dockerfile
    ports:
      - "${SECURITY_AGENT_PORT:-8083}:8083"
    environment:
      - PORT=8083
      - FI_MCP_URL=${FI_MCP_URL:-http://fi-mcp-server:8080}
    depends_on:
      - fi-mcp-server
    networks:
      - juno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mobile App (Flutter Web)
  mobile-app:
    build:
      context: ./mobile_app
      dockerfile: Dockerfile
      args:
        - COORDINATOR_HOST=localhost
        - COORDINATOR_PORT=${COORDINATOR_MCP_PORT:-8091}
    ports:
      - "${MOBILE_APP_PORT:-3000}:80"
    depends_on:
      - coordinator-mcp
    networks:
      - juno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  juno-network:
    driver: bridge

volumes:
  juno-data: